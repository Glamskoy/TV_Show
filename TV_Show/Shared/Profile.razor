@page "/Profile"

@inject Blazored.LocalStorage.ILocalStorageService storage
@inject NavigationManager manager
@using MongoDB.Driver


<div class="row" style="margin-right: auto; margin-left: auto;">
    <div calss="col" style="margin-left: 50px; margin-top: 50px; margin-bottom: 50px;">
        <div class="card border-info mb-3" style="max-width: 18rem; border-radius:10px;">
            <h3 style="text-align: center;">@UserLogin</h3>
            <div class="card-body">
                <img src="/profile.png" class="card-img-top" alt="Profile">
            </div>
        </div>
    </div>
    <div class="col" style="margin-right: 50px; margin-left: 10px; margin-top: 50px; margin-bottom: 50px;">
        <h3 style="text-align:left">My Episodes: @episodsCount</h3>
        <div class="progress">
            <div class="progress-bar" role="progressbar"
                 aria-valuenow="@episodsCount" aria-valuemin="0" aria-valuemax="@allEpisodsCount"></div>
        </div>
        <h3 style="text-align:left">Minuts: @minutsCount</h3>
        <div class="progress">
            <div class="progress-bar bg-success" role="progressbar"
                 style="width: 10%" aria-valuenow="@minutsCount" aria-valuemin="0" aria-valuemax="@allTimeCount"></div>
        </div>
        <h3 style="text-align:left">Hours: @hoursCount</h3>
        <div class="progress">
            <div class="progress-bar bg-danger" role="progressbar"
                 style="width: 10%" aria-valuenow="@hoursCount" aria-valuemin="0" aria-valuemax="@allHoursCount"></div>
        </div>
    </div>


</div>

@if (IsUserLogged)
{
    <div class="container">
        <div class="accordion" id="accordionPanelsStayOpen">
            <div class="accordion-item">
                <h3 class="accordion-header" id="panelsStayOpen-headingOne">

                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true"
                            aria-controls="panelsStayOpen-collapseOne" style="border-radius: 15px;
                                background-color: aquamarine; width: 100%;">
                        <div class="text-left">Game Of Thrones</div>
                    </button>
                </h3>
                @foreach (var item1 in user1)
                {
                    @if (item1.UserSeriesLogin == UserLogin && item1.SerialName == "Game of Thrones")
                    {
                        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show"
                             aria-labelledby="panelsStayOpen-headingOne">
                            <div class="accordion-body">
                                <div class="container px-4">
                                    <div class="row gx-5">
                                        <div class="col" style="margin-left: auto;">
                                            <SeriesListTable UserSeriesLogin="@UserLogin"
                                                             UserSeriesPassword="@UserPassword"
                                                             SerialName="@item1.SerialName" SerialSeason="@item1.SerialSeason"
                                                             SeriesNumber="@item1.SeriesNumber" SeriesName="@item1.SeriesName" />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}
@if (IsUserLogged)
{
    <div class="container">
        <div class="accordion" id="accordionPanelsStayOpen">
            <div class="accordion-item">
                <h3 class="accordion-header" id="panelsStayOpen-headingOne">

                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true"
                            aria-controls="panelsStayOpen-collapseOne" style="border-radius: 15px;
                                background-color: aquamarine; width: 100%;">
                        <div class="text-left">Supernatural</div>
                    </button>
                </h3>
                @foreach (var item1 in user1)
                {
                    @if (item1.UserSeriesLogin == UserLogin && item1.SerialName == "Supernatural")
                    {
                        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show"
                             aria-labelledby="panelsStayOpen-headingOne">
                            <div class="accordion-body">
                                <div class="container px-4">
                                    <div class="row gx-5">
                                        <div class="col" style="margin-left: auto;">
                                            <SeriesListTable UserSeriesLogin="@UserLogin"
                                                             UserSeriesPassword="@UserPassword"
                                                             SerialName="@item1.SerialName" SerialSeason="@item1.SerialSeason"
                                                             SeriesNumber="@item1.SeriesNumber" SeriesName="@item1.SeriesName" />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}
@if (IsUserLogged)
{
    <div class="container">
        <div class="accordion" id="accordionPanelsStayOpen">
            <div class="accordion-item">
                <h3 class="accordion-header" id="panelsStayOpen-headingOne">

                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true"
                            aria-controls="panelsStayOpen-collapseOne" style="border-radius: 15px;
                                background-color: aquamarine; width: 100%;">
                        <div class="text-left">The Big Bang Theory</div>
                    </button>
                </h3>
                @foreach (var item1 in user1)
                {
                    @if (item1.UserSeriesLogin == UserLogin && item1.SerialName == "The Big Bang Theory")
                    {
                        <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show"
                             aria-labelledby="panelsStayOpen-headingOne">
                            <div class="accordion-body">
                                <div class="container px-4">
                                    <div class="row gx-5">
                                        <div class="col" style="margin-left: auto;">
                                            <SeriesListTable UserSeriesLogin="@UserLogin"
                                                             UserSeriesPassword="@UserPassword"
                                                             SerialName="@item1.SerialName" SerialSeason="@item1.SerialSeason"
                                                             SeriesNumber="@item1.SeriesNumber" SeriesName="@item1.SeriesName" />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
}


@code {
    public bool IsUserLogged { get; set; }
    public string UserLogin { get; set; }
    public string UserPassword { get; set; }
    public string SerialIsSelected { get; set; }

    public int GoTSeriesCount { get; set; }
    public int SpnSeriesCount { get; set; }
    public int TBBTSeriesCount { get; set; }

    public int GoTTimeCount { get; set; }
    public int SpnTimeCount { get; set; }
    public int TBBTTimeCount { get; set; }

    //User user1 = new User();

    List<UserSeries> user = new List<UserSeries>();
    List<UserSeries> user1 = new List<UserSeries>();

    int allEpisodsCount = 0;
    int allTimeCount = 0;
    int allHoursCount;

    int episodsCount = 0;
    int minutsCount = 0;
    int hoursCount = 0;

    int episodString;

    bool userIsAuthorised = true;


    protected override async Task OnInitializedAsync()
    {
        IsUserLogged = await storage.GetItemAsync<bool>("IsUserLogged");
        UserLogin = await storage.GetItemAsync<string>("UserLogin");
        UserPassword = await storage.GetItemAsync<string>("UserPassword");
        SerialIsSelected = await storage.GetItemAsync<string>("SerialIsSelected");

        GoTSeriesCount = await storage.GetItemAsync<int>("GoTSeriesCount");
        SpnSeriesCount = await storage.GetItemAsync<int>("SpnSeriesCount");
        TBBTSeriesCount = await storage.GetItemAsync<int>("TBBTSeriesCount");

        GoTTimeCount = await storage.GetItemAsync<int>("GoTTimeCount");
        SpnTimeCount = await storage.GetItemAsync<int>("SpnTimeCount");
        TBBTTimeCount = await storage.GetItemAsync<int>("TBBTTimeCount");

        var connectionString1 = "mongodb://localhost";
        var client1 = new MongoClient(connectionString1);
        var db1 = client1.GetDatabase("TV_Shows");
        var collection1 = db1.GetCollection<UserSeries>("UserSeries");

        episodsCount = Convert.ToInt32(collection1.Find(x => x.UserSeriesLogin == UserLogin &&
        x.UserSeriesPassword == UserPassword).CountDocuments());

        if (collection1.Find(x => x.UserSeriesLogin == UserLogin &&
         x.UserSeriesPassword == UserPassword && x.SerialName == "Game of Thrones").CountDocuments() > 0)
        {
            allEpisodsCount += GoTSeriesCount;
            allTimeCount += GoTTimeCount;
            if (allTimeCount >= 60)
                allHoursCount = allTimeCount / 60;
        }

        if (collection1.Find(x => x.UserSeriesLogin == UserLogin &&
        x.UserSeriesPassword == UserPassword && x.SerialName == "The Big Bang Theory").CountDocuments() > 0)
        {
            allEpisodsCount += TBBTSeriesCount;
            allTimeCount += TBBTTimeCount;
            if (allTimeCount >= 60)
                allHoursCount = allTimeCount / 60;
        }

        if (collection1.Find(x => x.UserSeriesLogin == UserLogin &&
        x.UserSeriesPassword == UserPassword && x.SerialName == "Supernatural").CountDocuments() > 0)
        {
            allEpisodsCount += SpnSeriesCount;
            allTimeCount += SpnTimeCount;
            if (allTimeCount >= 60)
                allHoursCount = allTimeCount / 60;
        }

        minutsCount += 57 * Convert.ToInt32(collection1.Find(x => x.UserSeriesLogin == UserLogin &&
    x.UserSeriesPassword == UserPassword && x.SerialName == "Game of Thrones").CountDocuments());

        minutsCount += 43 * Convert.ToInt32(collection1.Find(x => x.UserSeriesLogin == UserLogin &&
        x.UserSeriesPassword == UserPassword && x.SerialName == "Supernatural").CountDocuments());

        minutsCount += 22 * Convert.ToInt32(collection1.Find(x => x.UserSeriesLogin == UserLogin &&
        x.UserSeriesPassword == UserPassword && x.SerialName == "The Big Bang Theory").CountDocuments());

        if (minutsCount >= 60)
            hoursCount = minutsCount / 60;

        episodString = episodsCount * 100 / allEpisodsCount;

        var connectionString = "mongodb://localhost";
        var client = new MongoClient(connectionString);
        var db = client.GetDatabase("TV_Shows");
        var collection = db.GetCollection<UserSeries>("UserSeries").AsQueryable();
        foreach (var item in collection)
        {
            UserSeries x = new UserSeries();
            x.UserSeriesLogin = item.UserSeriesLogin;
            x.UserSeriesPassword = item.UserSeriesPassword;
            x.SerialName = item.SerialName;
            user.Add(x);
            //if (!IsUserLogged)
            //    user.Clear();
        }
        foreach (var item in collection)
        {
            UserSeries x = new UserSeries();
            x.UserSeriesLogin = item.UserSeriesLogin;
            x.UserSeriesPassword = item.UserSeriesPassword;
            x.SerialName = item.SerialName;
            x.SerialSeason = item.SerialSeason;
            x.SeriesNumber = item.SeriesNumber;
            x.SeriesName = item.SeriesName;
            user1.Add(x);

            //episodsCount++;
            //if (x.SerialName == "Game of Thrones")
            //    minutsCount += 57;
            //if (x.SerialName == "Supernatural")
            //    minutsCount += 43;
            //if (x.SerialName == "The Big Bang Theory")
            //    minutsCount += 22;
            //if (minutsCount >= 60)
            //    hoursCount = minutsCount / 60;
        }
    }


}
