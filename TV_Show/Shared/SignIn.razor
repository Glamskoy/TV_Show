@page "/SignIn"
@inject Blazored.LocalStorage.ILocalStorageService storage
@inject NavigationManager manager
@using MongoDB.Driver;

<div class="modal fade" id="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sign in to TV-Show</h5>
            </div>
            <div class="modal-body" style="margin-bottom: 15px;">
                <p style="width:100%; margin-bottom: inherit;">Username or email address</p>
                <input style="width: 100%; margin-bottom: inherit;" @bind="CurrentUserLogin"/>
                <p style="width: 100%; margin-bottom: inherit;">Password</p>
                <input style="width: 100%; margin-bottom: inherit;" @bind="CurrentUserPassword"/>
                <button type="button" class="btn-close" data-bs-dismiss="modal"
                        style="height: 40px; width: 100%; margin-top: 15px;"
                        @onclick="Login">Sign in</button>
            </div>
        </div>
    </div>
</div>


@code {
    public string CurrentUserLogin { get; set; }
    public string CurrentUserPassword { get; set; }

    public async Task Login()
    {
        var connectionString = "mongodb://localhost";
        var client = new MongoClient(connectionString);
        var db = client.GetDatabase("TV_Shows");
        var collection = db.GetCollection<User>("Users");

        if (collection.Find(x => x.CurrentUserLogin == CurrentUserLogin &&
        x.CurrentUserPassword == CurrentUserPassword).CountDocuments() > 0)
        {
            User user = collection.Find(x => x.CurrentUserLogin == CurrentUserLogin &&
            x.CurrentUserPassword == CurrentUserPassword).Single();
            await storage.SetItemAsync<User>("CurrentUser", user);
            await storage.SetItemAsync<bool>("IsUserLogged", true);
            manager.NavigateTo("/", true);
        }
    }
}
